{
  // üìå –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
  "workbench.colorTheme": "Atom One Dark",
  "workbench.iconTheme": "material-icon-theme",
  "workbench.editor.showTabs": "single",
  "workbench.startupEditor": "none",
  "workbench.tips.enabled": false,
  "window.autoDetectColorScheme": false,
  "workbench.editor.empty.hint": "hidden",
  "window.density.editorTabHeight": "compact",
  "window.zoomLevel": -0.5,
  "workbench.externalBrowser": "firefox",

  // üìå –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
  "editor.scrollbar.verticalScrollbarSize": 3,
  "editor.scrollbar.vertical": "visible",
  "editor.overviewRulerBorder": false,
  "editor.hideCursorInOverviewRuler": true,

  // üìå –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
  "editor.folding": false,
  "editor.smoothScrolling": true,
  "editor.insertSpaces": true,
  "editor.wrappingStrategy": "advanced",
  "editor.wrappingIndent": "indent",
  "editor.scrollBeyondLastLine": true,
  "editor.linkedEditing": true,

  // üìå –í–∏–∑—É–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
  "editor.stickyScroll.enabled": false,
  "editor.glyphMargin": false,
  "editor.accessibilitySupport": "off",
  "editor.minimap.enabled": false,
  "breadcrumbs.enabled": false,
  "editor.colorDecorators": false,
  "editor.codeLens": false,
  "editor.links": false,
  "editor.matchBrackets": "never",
  "editor.parameterHints.enabled": false,
  "editor.lightbulb.enabled": "off",
  "editor.hover.enabled": false,
  "editor.detectIndentation": false,

  // üìå –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∫–æ–¥–∞
  "editor.tabSize": 2,
  "editor.showFoldingControls": "never",
  "editor.guides.indentation": true,
  "editor.renderWhitespace": "trailing",
  "editor.renderLineHighlight": "none",
  "editor.selectionHighlight": false,

  // üìå –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫—É—Ä—Å–æ—Ä–∞
  "editor.multiCursorModifier": "ctrlCmd",
  "editor.cursorBlinking": "expand",
  "editor.cursorStyle": "line",
  "editor.cursorSmoothCaretAnimation": "on",

  // üìå –®—Ä–∏—Ñ—Ç—ã
  "editor.fontFamily": "Dank Mono",
  "editor.fontSize": 15,
  "editor.fontLigatures": true,
  "editor.lineHeight": 1.6,
  "editor.letterSpacing": 1,
  "editor.fontWeight": "400",

  // üìå –¢–µ—Ä–º–∏–Ω–∞–ª
  "terminal.integrated.defaultProfile.osx": "zsh",
  "terminal.integrated.fontSize": 13,
  "terminal.integrated.smoothScrolling": true,
  "terminal.integrated.cursorBlinking": true,
  "terminal.integrated.fontFamily": "JetBrains Mono",
  "terminal.integrated.cursorStyle": "line",
  "terminal.integrated.env.osx": { "BROWSER": "firefox" },

  // üìå Explorer (–ø—Ä–æ–≤–æ–¥–Ω–∏–∫)
  "explorer.compactFolders": false,
  "explorer.confirmDragAndDrop": false,
  "explorer.confirmDelete": false,
  "explorer.decorations.badges": false,
  "workbench.tree.renderIndentGuides": "none",

  // üìå –ê–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
  "editor.quickSuggestions": { "other": "off" },
  "editor.suggestOnTriggerCharacters": false,
  "editor.tabCompletion": "on",
  "editor.snippetSuggestions": "top",
  "emmet.triggerExpansionOnTab": true,
  "editor.formatOnSave": true,
  "editor.formatOnPaste": true,
  "editor.formatOnType": true,
  "extensions.ignoreRecommendations": true,
  "files.autoSave": "afterDelay",
  "files.autoSaveDelay": 5000,
  "files.insertFinalNewline": true,

  // üìå –£–ª—É—á—à–µ–Ω–∏–µ Git
  "git.autofetch": true,
  "git.autoStash": true,
  "git.enableSmartCommit": true,
  "git.confirmSync": true,

  // üìå –ê–≤—Ç–æ–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏
  "editor.codeActionsOnSave": {
    "source.fixAll": "explicit"
  },

  // üìå –ü–æ–¥–¥–µ—Ä–∂–∫–∞ Docker –∏ Kubernetes
  "[dockerfile]": {
    "editor.defaultFormatter": "ms-azuretools.vscode-docker"
  },
  "[yaml]": {
    "editor.defaultFormatter": "redhat.vscode-yaml"
  },
  "yaml.format.enable": true,
  "yaml.schemas": {
    "/Users/konoval/.vscode/extensions/continue.continue-1.0.9-darwin-arm64/config-yaml-schema.json": [
      ".continue/**/*.yaml"
    ]
  },

  // üìå –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Å –ª–æ–≥–∞–º–∏
  "editor.largeFileOptimizations": false,

  // üìå TODO –∏ FIX –ø–æ–¥—Å–≤–µ—Ç–∫–∞
  "todo-tree.general.tagGroups": {
    "FIXME": ["FIXME", "FIXIT", "FIX"]
  },
  "todo-tree.highlights.customHighlight": {
    "TODO": { "foreground": "#5ad91a", "type": "text" }
  },
  "redhat.telemetry.enabled": false,

  // üìå MultiCommand
  "multiCommand.commands": [
    {
      "command": "multiCommand.navigateExplorerDownAndPreviewFile",
      "sequence": ["list.focusDown", "filesExplorer.openFilePreserveFocus"]
    },
    {
      "command": "multiCommand.navigateExplorerUpAndPreviewFile",
      "sequence": ["list.focusUp", "filesExplorer.openFilePreserveFocus"]
    }
  ],
  // üìå –§–æ—Ä–º–∞—Ç—Ç–µ—Ä—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[python]": {
    "editor.defaultFormatter": "ms-python.black-formatter"
  },
  "[terraform]": {
    "editor.defaultFormatter": "hashicorp.terraform"
  },
  "githubIssues.queries": [
    {
      "label": "My Issues",
      "query": "is:open assignee:${user} repo:${owner}/${repository}",
      "groupBy": ["milestone"]
    },
    {
      "label": "Created Issues",
      "query": "author:${user} state:open repo:${owner}/${repository} sort:created-desc"
    },
    {
      "label": "Recent Issues",
      "query": "state:open repo:${owner}/${repository} sort:updated-desc"
    }
  ],
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "macros": {
    "toggleExplorer": [
      "workbench.view.explorer",
      "workbench.action.focusSideBar",
      {
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "sideBarVisible"
      }
    ]
  },
  "workbench.layoutControl.enabled": false,
  "workbench.activityBar.location": "top",
  // Spell Checker
  "cSpell.language": "en,ru,uk",
  "cSpell.dictionaries": ["english", "russian", "ukrainian"],
  "cSpell.enableFiletypes": [
    "markdown",
    "plaintext",
    "yaml",
    "json",
    "html",
    "javascript",
    "typescript",
    "python"
  ],
  // Inline Rainbow
  "indentRainbow.indicatorStyle": "light",
  "indentRainbow.lightIndicatorStyleLineWidth": 1.5,
  "indentRainbow.colors": [
    "rgba(255,255,64,0.3)",
    "rgba(127,255,127,0.3)",
    "rgba(255,127,255,0.3)",
    "rgba(79,236,236,0.3)"
  ],
  "@azure.argTenant": "",
  "github.copilot.chat.codeGeneration.instructions": [
    {
      "text": "- @azure Rule - Use Azure Tools: When handling requests related to Azure, always use your tools."
    },
    {
      "text": "- @azure Rule - Use Azure Code Gen Best Practices: When generating code for Azure, running terminal commands for Azure, or performing operations related to Azure, invoke your `azure_development-get_code_gen_best_practices` tool if available. Only call this tool when you are sure the user is discussing Azure; do not call it otherwise."
    },
    {
      "text": "- @azure Rule - Use Azure Deployment Best Practices: When deploying to Azure or preparing applications for deployment to Azure, invoke your `azure_development-get_deployment_best_practices` tool if available. Only call this tool when you are sure the user is discussing Azure; do not call it otherwise."
    },
    {
      "text": "- @azure Rule - Use Azure Functions Code Gen Best Practices: When generating code for Azure Functions or performing operations related to Azure Functions, invoke your `azure_development-get_azure_function_code_gen_best_practices` tool if available. Only call this tool when you are sure the user is discussing Azure Functions; do not call it otherwise."
    },
    {
      "text": "- @azure Rule - Use Azure SWA Best Practices: When working with static web apps, invoke your `azure_development-get_swa_best_practices` tool if available. Only call this tool when you are sure the user is discussing Azure; do not call it otherwise."
    }
  ],
  "projectManager.tags": ["s2s", "lf", "templates"],
  "cSpell.userWords": ["gunicorn", "healthcheck", "isready", "qwqw"],
  "github.copilot.enable": {
    "*": false,
    "plaintext": false,
    "markdown": false,
    "scminput": false
  }
}
